Installing FreePBX 14 on CentOS 7

#; Disable selinux
#; In /etc/sysconfig/selinux , change the following lines:

sed -i 's/\(^SELINUX=\).*/\SELINUX=disabled/' /etc/sysconfig/selinux
sed -i 's/\(^SELINUX=\).*/\SELINUX=disabled/' /etc/selinux/config
setenforce 0

# reboot, and verify the selinux status by running 'sestatus'. It should say:

#; SELinux status: disabled
#; Update Your System
yum -y update
yum -y groupinstall core base "Development Tools"

#; Add the Asterisk User
adduser asterisk -M -c "Asterisk User"

#; Install Additional Required Dependencies
yum -y install lynx tftp-server unixODBC mysql-connector-odbc mariadb-server mariadb \
  httpd ncurses-devel sendmail sendmail-cf sox newt-devel libxml2-devel libtiff-devel \
  audiofile-devel gtk2-devel subversion kernel-devel git crontabs cronie \
  cronie-anacron wget vim uuid-devel sqlite-devel net-tools gnutls gnutls-devel python-devel texinfo \
  libuuid-devel libedit libedit-devel
  
#; Install php 7.2.6 repositories
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm

#; Install php7.2w
yum remove php*
yum install php72w php72w-pdo php72w-mysql php72w-mbstring php72w-pear php72w-process php72w-xml php72w-opcache php72w-ldap php72w-intl php72w-soap
#; Install nodejs
curl -sL https://rpm.nodesource.com/setup_13.x | bash -
yum install -y nodejs
#; Enable and Start MariaDB, You must have MariaDB running for freepbx to operate normally.  It must start automatically, and be running continuously.

systemctl enable mariadb.service
systemctl start mariadb

#; Now that our MariaDB database is running, we want to run a simple security script that will remove some dangerous defaults and lock down access to our database system a little bit

mysql_secure_installation

#; The prompt will ask you for your current root password. Since you just installed MySQL, you most likely wonâ€™t have one, so leave it blank by pressing enter. Then the prompt will ask you if you want to set a root password. Do not set a root password. We secure the database automatically, as part of the install script.  Apart from that you can chose yes for the rest. This will remove some sample users and databases, disable remote root logins, and load these new rules so that MySQL immediately respects the changes we have made.

#; Enable and Start Apache,FreePBX uses the Apache web server, so this must be started and running.

systemctl enable httpd.service
systemctl start httpd.service

#; Install Legacy Pear requirements
pear install Console_Getopt

#; Install Dependencies for Google Voice (if required)
#; Install iksemel
cd /tmp
wget https://github.com/meduketto/iksemel/archive/master.zip -O iksemel-master.zip
unzip iksemel-master.zip
rm -f iksemel-master.zip
cd iksemel-master
./autogen.sh
./configure
make
make install

#; Install and Configure Asterisk, Download Asterisk source files.
cd /tmp
# wget http://downloads.asterisk.org/pub/telephony/dahdi-linux-complete/dahdi-linux-complete-current.tar.gz
# wget http://downloads.asterisk.org/pub/telephony/libpri/libpri-current.tar.gz

wget -O jansson.tar.gz https://github.com/akheron/jansson/archive/v2.12.tar.gz
wget https://downloads.asterisk.org/pub/telephony/asterisk/asterisk-17-current.tar.gz
##### https://downloads.asterisk.org/pub/telephony/asterisk/releases/ for checking the versions ###

## Compile and install DAHDI
;one must install DAHDI before installing libpri.
;If you don't have any physical PSTN hardware attached to this machine, you don't need to install DAHDI or libpri(For example, a T1 or E1 card, or a USB device).
cd /tmp
tar xvfz dahdi-linux-complete-current.tar.gz
tar xvfz libpri-current.tar.gz
rm -f dahdi-linux-complete-current.tar.gz libpri-current.tar.gz
cd dahdi-linux-complete-*
make all
make install
make config
cd /usr/src/libpri-*
make
make install


#; Compile and Install jansson
cd /tmp
tar vxfz jansson.tar.gz
rm -f jansson.tar.gz
cd jansson-*
autoreconf -i
./configure --libdir=/usr/lib64
make
make install

#; Compile and install Asterisk
cd /tmp
tar xvfz asterisk-*-current.tar.gz
rm -f asterisk-*-current.tar.gz
cd asterisk-*
contrib/scripts/get_mp3_source.sh
contrib/scripts/install_prereq install
./configure --with-pjproject-bundled --with-jansson-bundled  --with-iksemel
make menuselect.makeopts
menuselect/menuselect --enable app_macro --enable format_mp3 menuselect.makeopts
##;turn on 'format_mp3' and res_snmp module from Resource Modules. You will be prompted at the point to pick which modules to build. Most of them will already be enabled, but if you want to have MP3 support (eg, for Music on Hold), you need to manually turn on 'format_mp3' on the first page.
#;After selecting 'Save & Exit' you can then continue
## Building and Installing Asterisk
make
make install
make config

## Installing Sample Files
make samples
## generate logfiles
make install-logrotate
ldconfig
update-rc.d -f asterisk remove

## Cached Data
# The ./configure command caches certain data to speed things up if it's invoked multiple times. To clear all the cached data, you can use the following command to completely clear out any cached data from the Asterisk build system.

make distclean



#; Set Asterisk ownership permissions.

chown asterisk. /var/run/asterisk
chown -R asterisk. /etc/asterisk
chown -R asterisk. /var/{lib,log,spool}/asterisk
chown -R asterisk. /var/spool/mqueue
chown -R asterisk. /usr/lib64/asterisk
chown -R asterisk. /var/www/

#; Install and Configure FreePBX
#; A few small modifications to Apache.
sed -i 's/\(^upload_max_filesize = \).*/\120M/' /etc/php.ini
sed -i 's/^\(User\|Group\).*/\1 asterisk/' /etc/httpd/conf/httpd.conf
sed -i 's/AllowOverride None/AllowOverride All/' /etc/httpd/conf/httpd.conf

systemctl restart httpd.service


#; Download and install FreePBX.
cd /tmp
wget http://mirror.freepbx.org/modules/packages/freepbx/freepbx-14.0-latest.tgz
tar xfz freepbx-14.0-latest.tgz
rm -f freepbx-14.0-latest.tgz
cd freepbx
./start_asterisk start
./install -n

## FreePBX 15
cd /tmp
wget http://mirror.freepbx.org/modules/packages/freepbx/freepbx-15.0-latest.tgz
tar vxfz freepbx-15.0-latest.tgz
rm -f freepbx-15.0-latest.tgz
touch /etc/asterisk/{modules,cdr}.conf
cd freepbx
./start_asterisk start
./install -n
 
#; systemd startup script for FreePBX

cat> /etc/systemd/system/freepbx.service<<EOF
[Unit]
Description=FreePBX VoIP Server
After=mariadb.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/sbin/fwconsole start -q
ExecStop=/usr/sbin/fwconsole stop -q

[Install]
WantedBy=multi-user.target
EOF

systemctl enable freepbx.service
systemctl start freepbx.service
systemctl status -l freepbx.service

## Install/delete/disable Freepbx modules
fwconsole firewall disable
fwconsole ma disablerepo commercial
fwconsole ma installall
fwconsole ma delete firewall
fwconsole r

# Upgrade 
fwconsole ma upgradeall

## install modules.
fwconsole ma downloadinstall asteriskinfo
fwconsole ma downloadinstall sipsettings

## Download and install/upgrade a Module
fwconsole ma install core
fwconsole ma download core
fwconsole ma upgrade core

# set permissions
fwconsole chown

## Security Warning

fwconsole ma refreshsignatures
fwconsole reload

# reboot the machine

## Setting Relay Host in Postfix

# setup email
vi /etc/postfix/main.cf
change relayhost = [ipaddress of smtp server]

postfix reload

# Checking Email Queue
: flush all emails- type
postfix flush
: To see mail queue type
mailq
: To remove all mail from the queue type
postsuper -d ALL

# Sending Email from CLI

sudo -u asterisk mail -s test1 myname@somedomain.com (hit enter)
;;replace myname@somedomain.com with email address to send test email to

(Type body of message and hit enter)

Ctrl D and hit enter


/var/lib/asterisk/sounds/ivr-office/

####### END ###############



### TFTP


#; If you plan to use hardware SIP phones you will probably want to set up TFTP.
yum -y install tftp-server
cat > /etc/xinetd.d/tftp << EOF
# default: off
# description: The tftp server serves files using the trivial file transfer \
#       protocol.  The tftp protocol is often used to boot diskless \
#       workstations, download configuration files to network-aware printers, \
#       and to start the installation process for some operating systems.
service tftp
{
        socket_type             = dgram
        protocol                = udp
        wait                    = yes
        user                    = root
        server                  = /usr/sbin/in.tftpd
        server_args             = -s /var/lib/tftpboot
        disable                 = no
        per_source              = 11
        cps                     = 100 2
        flags                   = IPv4
}
EOF

chmod 755 /var/lib/tftpboot
systemctl restart xinetd

firewall-cmd --permanent --zone=public --add-port=69/udp
firewall-cmd --reload







############## END ############################

## Web UI configuration for following objects:

Settings > Advanced Settings > System Identity > VAC-PBX
Settings > Advanced Settings > PHP Timezone > Check if it is the same as server timezone
Applications > Extensions <!-- only those used for OPS purpose, excluding Call Center Agent extensions -->
Connectivity > Trunks with Disable Trunk = Yes
Connectivity > Inbound Routes 
Connectivity > Outbound Routes 
Admin > System Recordings <!-- only those used for OPS purpose -->
Applications > Conferences <!-- only those used for OPS purpose --> 
Applications > IVR <!-- only those used for OPS purpose -->




## enable res_snmp module

asterisk -rx "module show like snmp"

;; Enable agentX in snmp.

echo '
#Enable AgentX support
master agentx
agentXSocket /var/agentx/master

# Set permissions on AgentX socket and containing
# directory such that process in group 'asterisk'
# will be able to connect

agentXPerms  0660 0550 nobody asterisk

# Asterisk user
createUser logstash MD5 logstash DES
rwuser logstash priv

# monitoring to ensure that at least one asterisk process
proc asterisk
sysObjectID .1.3.6.1.4.1.22736.1
' >> /etc/snmp/snmpd.conf

---

vi  /etc/asterisk/res_snmp.conf

[general]
; We run as a subagent per default â€“ to run as a full agent
; we must run as root (to be able to bind to port 161)
subagent = yes
; SNMP must be explicitly enabled to be active
enabled = yes

# reload snmp module
asterisk -rx "module unload res_snmp.so"
asterisk -rx "module load res_snmp.so"
asterisk -rx "module show like snmp"

## install MIBS:
Lookup the Asterisk MIB defs at https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions
Install the ASTERISK-MIB definitions into /usr/share/snmp/mibs/ASTERISK-MIB.txt
Install the DIGIUM-MIB definitions into /usr/share/snmp/mibs/DIGIUM-MIB.txt
copy the contents to below files.

vi /usr/share/snmp/mibs/ASTERISK-MIB.txt
vi /usr/share/snmp/mibs/DIGIUM-MIB.txt

chmod 644 -R /usr/share/snmp/mibs/


## verify
ls -al /var/agentx

;Your permissions must look like:
 total 4
 dr-xr-x---   2 root   root       19 Jan 17 17:22 .
 drwxr-xr-x. 22 root   root     4096 Jan 17 17:00 ..
 srw-rw----   1 nobody asterisk    0 Jan 17 17:22 master

; directory permissions
chmod 755 /var/agentx
chown asterisk. /var/run/asterisk
chown -R asterisk. /etc/asterisk
chown -R asterisk. /var/{lib,log,spool}/asterisk
chown -R asterisk. /usr/lib64/asterisk
chown -R asterisk. /var/www/


# restart service
service snmpd restart
fwconsole restart

# TEST SNMP Monitoring
snmpwalk -v3 -u logstash -l authPriv -a MD5 -A logstash -x DES -X logstash 10.64.58.53 asterisk



## config files review
asterisk.conf
modules.conf
extensions.conf
sip.conf or pjsip.conf



### Generated from FreePBX
;; All sip devices added
cat /etc/asterisk/sip_additional.conf

;; sip registration
cat /etc/asterisk/sip_registrations.conf



## Hangup Cause Codes

grep -e '[CALLID].*HANGUPCAUSE' /var/log/asterisk/full

